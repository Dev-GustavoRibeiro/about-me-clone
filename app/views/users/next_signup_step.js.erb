<% if @step == '2' %>
  let email, firstName, lastName, userLocation, userReason, website, photo, layout, color, username, password;
  let userInterests = [], userOccupations = [];
  prepareSignupStepTwo();
<% elsif @step == 'email in use' %>
  $('.signup-instructions-two').removeClass('white');
<% elsif @step == '3' %>
  prepareSignupStepThree();
<% elsif @step == '4' %>
  prepareSignupStepFour();
<% elsif @step == '5' %>
  prepareSignupStepFive();
<% elsif @step == '6' %>
  prepareSignupStepSix();
<% elsif @step == '7' %>
  prepareSignupStepSeven();
<% elsif @step == '8' %>
  prepareSignupStepEight();
<% elsif @step == '9' %>
  prepareSignupStepNine();
<% elsif @step == '10' %>
  prepareSignupStepTen();
<% elsif @step == 'username in use' %>
  $('#warning').text('This username is already in use.').css('color', '#D92626');
<% elsif @step == '11' %>
  prepareSignupStepEleven();
<% end %>

function prepareSignupStepTwo() {
  updateNavbar();
  email = $('#email').val();
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/two') %>');
  addHiddenInputForAllFilledItems();
}

function updateNavbar(brandColor = 'white', signupColor = '#0a84d0') {
  $('.navbar-nav').detach();
  $('.navbar-brand').css('color', brandColor);
  $('.navbar-signup').css('background-color', signupColor);
}

function addHiddenInputForAllFilledItems() {
  if (email !== undefined) addHiddenInput('email', email);
  if (firstName !== undefined) addHiddenInput('first_name', firstName);
  if (lastName !== undefined) addHiddenInput('last_name', lastName);
  if (userLocation !== undefined) addHiddenInput('location', userLocation);
  if (userInterests.length > 0) addHiddenInput('user_interests', userInterests);
  if (userOccupations.length > 0) addHiddenInput('user_occupations', userOccupations);
  if (userReason !== undefined) addHiddenInput('user_reason', userReason);
  if (website !== undefined) addHiddenInput('website', website);
  if (photo !== undefined) addHiddenInput('photo', photo);
  if (layout !== undefined) addHiddenInput('layout', layout);
  if (color !== undefined) addHiddenInput('color', color);
  if (username !== undefined) addHiddenInput('username', username);
  if (password !== undefined) addHiddenInput('password', password);
}

function addHiddenInput(name, value) {
  $('form').append(`<input type="hidden" id=${name} name=${name} value=${value}>`);
}

function prepareSignupStepThree() {
  firstName = $('#first_name').val();
  lastName = $('#last_name').val();
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/three') %>');
  $('.step-description').text(`Where are you, ${firstName}?`);
  addHiddenInputForAllFilledItems();
}

function prepareSignupStepFour() {
  userLocation = $('#location').val();
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/four') %>');
  addHiddenInputForAllFilledItems();
  addClickEventToItems();
}

function addClickEventToItems() {
  $('li[item-to-select]').click(function() { selectToggle(this); });
  $('.selected-item').click(function() { 
    deselectElement(this); 
    submitButtonToggle();
  });
}

function selectToggle(element, maxNumberOfBlankFields = 2) {
  if (userHasAlreadySelectedTheItems() && !thisElementIsAlreadySelected(element))
    return;
  else if (thisElementIsAlreadySelected(element))
    deselectElement(element);
  else
    selectElement(element);
  submitButtonToggle(maxNumberOfBlankFields);
}

function userHasAlreadySelectedTheItems() {
  return $('.selected-item:empty').length === 0;
}

function thisElementIsAlreadySelected(element) {
  return $(`.selected-item:contains(${$(element).text()})`).length === 1;
}

function deselectElement(element) {
  const selectedItem = $(element).text();
  if (selectedItem === '') return;
  $(`li[item-to-select]:contains(${selectedItem})`).css('color', '#0a84d0')
                                                   .css('background-color', 'white');
  $(`.selected-item:contains(${selectedItem})`).text('')
                                               .val(0)
                                               .css('background-color', 'white');
}

function selectElement(element) {
  $(element).css('color', 'white').css('background-color', '#0a84d0');
  $('.selected-item:empty').first().text($(element).text())
                           .val($(element).val())
                           .css('background-color', '#0a84d0');
}

function submitButtonToggle(maxNumberOfBlankFields = 2) {
  if ($('.selected-item:empty').length <= maxNumberOfBlankFields) 
    $('.next-step-button').prop('disabled', false);
  else
    $('.next-step-button').prop('disabled', true);
}

function prepareSignupStepFive() {
  $('.selected-item').each((index, item) => {
    const value = $(item).val();
    if (value !== 0) userInterests.push(value);
  });
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/five') %>');
  addHiddenInputForAllFilledItems();
  addClickEventToItems();
}

function prepareSignupStepSix() {
  $('.selected-item').each((index, item) => {
    const value = $(item).val();
    if (value !== 0) userOccupations.push(value);
  });
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/six') %>');
  addHiddenInputForAllFilledItems();
  $('li[item-to-select]').click(function() { 
    addReasonInput(this);
    selectToggle(this, 0);
  });
  $('.selected-item').click(function() {
    $("input[name='reason']").detach();
    deselectElement(this); 
    submitButtonToggle(0);
  });
}

function addReasonInput(reason) {
  if (!userHasAlreadySelectedTheItems()) {
    $("input[name='reason']").detach();
    addHiddenInput('reason', $(reason).val())
  }
}

function prepareSignupStepSeven() {
  userReason = $('.selected-item').val();
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/seven') %>');
  addHiddenInputForAllFilledItems();
}

function prepareSignupStepEight() {
  website = $('#website').val();
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/eight') %>');
  $('#add-photo-button').click(() => $('#photo').click());
  $('#change-photo-button').click(() => $('#photo').click());
  $('#photo').change(function () { showUploadedPhoto(this) });
  addHiddenInputForAllFilledItems();
}

function showUploadedPhoto(input) {
  $('#default-picture').detach();
  if (input.files && input.files[0]) {
    let reader = new FileReader();            
    reader.onload = function (e) {
      $(document.getElementById('preview-picture')).attr('src', e.target.result);
    }
    reader.readAsDataURL(input.files[0]);
  }
  changeTheButtonsDisplayed();
}

function changeTheButtonsDisplayed() {
  $('#add-photo-button').detach();
  $('#change-photo-button').show();
  $('#confirm-photo').show();
}

function prepareSignupStepNine() {
  photo = $('#preview-picture').attr('src');
  updateNavbar('#0a84d0', 'white');
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/nine') %>');
  $('.layout-example').click(function() { selectLayoutToggle(this); });
  $('.color-ball').click(function() { selectColorToggle(this); });
  addHiddenInputForAllFilledItems();
}

function selectLayoutToggle(layout) {
  if ($(layout).attr('selected') === undefined)
    selectLayout(layout);
  else
    deselectLayout(layout);
  nextStepButtonToggle();
}

function selectLayout(layout) {
  if ($('.layout-example[selected]').length > 0) return;

  $(layout).css('border', '3px solid #0a84d0').css('width', '397px');
  $(layout).attr('selected', true);
}

function deselectLayout(layout = '.layout-example[selected]') {
  $(layout).css('border', 'none').css('width', '400px');
  $(layout).removeAttr('selected');
}

function nextStepButtonToggle() {
  if ($('.layout-example[selected]').length > 0 && $('.color-ball[selected]').length > 0)
    $('.next-step-button').prop('disabled', false);
  else
    $('.next-step-button').prop('disabled', true);
}

function selectColorToggle(color) {
  if ($(color).attr('selected') === undefined)
    selectColor(color);
  else
    deselectColor(color);
  nextStepButtonToggle();
}

function selectColor(color) {
  if ($('.color-ball[selected]').length > 0) return;

  $(color).css('border', '2px solid #000000');
  $(color).attr('selected', true);
}

function deselectColor(color = '.color-ball[selected]') {
  $(color).css('border', 'none');
  $(color).removeAttr('selected');
}

function prepareSignupStepTen() {
  updateNavbar();
  layout = $('.layout-example[selected]').attr('value');
  color = $('.color-ball[selected]').attr('value');
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/ten') %>');
  $('#password').change(checkIfThePasswordsAreTheSame);
  $('#password_confirmation').change(checkIfThePasswordsAreTheSame);
  addHiddenInputForAllFilledItems();
}

function checkIfThePasswordsAreTheSame() {
  if ($('#password').val() === $('#password_confirmation').val()) {
    $('#warning').css('color', '#FFFFFF');
    $('.next-step-button').prop('disabled', false);
  } else {
    $('#warning').css('color', '#D92626');
    $('.next-step-button').prop('disabled', true);
  }
}

function prepareSignupStepEleven() {
  username = $('#username').val();
  password = $('#password').val();
  $('.signup-form-area').detach();
  $('.main-signup').append('<%= j (render 'users/sign_up_steps/eleven') %>');
  addHiddenInputForAllFilledItems();
}
